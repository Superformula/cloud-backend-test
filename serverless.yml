service:
  name: superformula-cloud-backend-test

frameworkVersion: ">=1.1.0 <=2.40.0"

plugins:
  - serverless-dynamodb-local
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-plugin-typescript

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    # Comment if you don't have a DynamoDB running locally
      noStart: true
    migration:
      dir: offline/migrations
  user_dynamodb_table_name: user
  othermodel_dynamodb_table_name: othermodel

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 15
  apiKeys:
    - name: lambdaApolloKey
      value: ${env:APOLLO_LAMBDA_KEY}
  environment:
    MAPBOX_ACCESS_TOKEN: "pk.eyJ1IjoibWFyaW9ydWl6ZGlheiIsImEiOiJja29lcGgzZGswY2hjMnducTBycmF2Mnh4In0.5AiTnbVzqm0iA-1B8N0leA" #Public token
    USER_DYNAMODB_TABLE: ${self:service.name}-${self:custom.user_dynamodb_table_name}-${opt:stage, self:provider.stage}
    OTHERMODEL_DYNAMODB_TABLE: ${self:service.name}-${self:custom.othermodel_dynamodb_table_name}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USER_DYNAMODB_TABLE}"

functions:
  graphql:
    handler: src/handler.graphqlHandler
    events:
      - http:
          private: true
          path: graphql
          method: post
          # cors: true
      - http:
          private: true
          path: graphql
          method: get
          # cors: true
      - http:
          path: playground
          method: ANY
          # cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.USER_DYNAMODB_TABLE}
